/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Zombie.glb -o src/components/models/Zombie.jsx -r public
*/

import React, { useEffect, useMemo, useRef, useState } from 'react'
import { useGLTF, useAnimations, Text } from '@react-three/drei'
import { useFrame, useGraph } from '@react-three/fiber';
import { SkeletonUtils } from 'three-stdlib';

const MOUVEMENT_SPEED = 0.08;

export function Zombie({email="Zombie",...props}) {
  const group = useRef()
  const { scene, materials, animations } = useGLTF(process.env.REACT_APP_REPOSITORY + '/models/Zombie.glb');
  const position = useMemo(() => props.position, []);

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);

  const { nodes } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  const [animation, setAnimation] = useState("Armature|Idle");

  useEffect(() => {
    actions[animation].reset().fadeIn(0.32).play();
    return () => actions[animation]?.fadeOut(0.32);
  }, [animation]);

  useFrame(() => {
    // console.log('group.current.position:'+JSON.stringify(group.current.position))
    // console.log('props.position:'+JSON.stringify(props.position))
    // console.log('Difference: '+group.current.position.distanceTo(props.position))
    if (group.current.position.distanceTo(props.position) > 0.1) {
      const direction = group.current.position
        .clone()
        .sub(props.position)
        .normalize()
        .multiplyScalar(MOUVEMENT_SPEED);
      group.current.position.sub(direction);
      group.current.lookAt(props.position);
      setAnimation("Armature|Running_Crawl")
    }
    else{
      setAnimation("Armature|Idle")
    }
  });

  // console.log(actions)
  return (
    <group ref={group} {...props} position={position} dispose={null} scale={[0.5,0.5,0.5]}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="Armature">
            <primitive object={nodes.mixamorigHips} />
          </group>
          <skinnedMesh name="Character" geometry={nodes.Character.geometry} material={materials.ColorSwatch} skeleton={nodes.Character.skeleton} />
        </group>
      </group>
      <group position={[0.4, 4.95, 0.75]} scale={[0.2, 0.2, 0.2]}>
        <mesh>
          {/* <circleGeometry args={[3.5, 32]} />
          <meshStandardMaterial  transparent opacity={0.8}/> */}
        </mesh>
        <Text
          position={[0, 0, 0]}
          fontSize={1} // Ajustez la taille du texte ici
          color="black"
          children={email}
        />
      </group>
    </group>
  )
}

useGLTF.preload(process.env.REACT_APP_REPOSITORY + '/models/Zombie.glb')
